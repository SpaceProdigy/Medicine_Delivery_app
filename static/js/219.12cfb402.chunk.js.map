{"version":3,"file":"static/js/219.12cfb402.chunk.js","mappings":"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","sources":["components/ButtonAdd/ButtonAdd.styled.jsx","components/ButtonAdd/ButtonAdd.jsx","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","pages/Home/Home.styled.jsx","components/List/List.styled.jsx","components/Item/Item.styled.jsx","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","components/Item/Item.jsx","shema.org/SchemaDrugsList.js","components/List/List.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButtonAdd = styled.button`\n  display: flex;\n  gap: 10px;\n  background-color: #53de44;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 500ms linear;\n\n  &:hover {\n    background-color: yellow;\n  }\n`;\n","import { FaCartPlus } from 'react-icons/fa';\nimport { StyledButtonAdd } from './ButtonAdd.styled';\n\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <StyledButtonAdd onClick={onClick}>\n      add to Cart <FaCartPlus size={20} />\n    </StyledButtonAdd>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SideBar = styled.aside`\n  box-shadow: 0px 1px 14px 0px rgba(0, 0, 0, 0.2);\n\n  width: 250px;\n  height: 470px;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 20px;\n\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #00000090;\n    border-radius: 5px;\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  color: #000000;\n  background-color: transparent;\n  width: 100%;\n  padding: 5px 0;\n  border: #000000 solid 1px;\n  border-radius: 5px;\n  transition: background-color 500ms linear;\n  cursor: pointer;\n\n  &:hover {\n    background-color: lime;\n  }\n`;\n","import React from 'react';\nimport { Button, SideBar, Title } from './Sidebar.styled';\n\nexport const Sidebar = () => {\n  return (\n    <SideBar>\n      <Title>Shops:</Title>\n      <Button>Antibiotics</Button>\n      <Button>Painkillers</Button>\n      <Button>Vitamins</Button>\n      <Button>Antiviral medications</Button>\n      <Button>Antihistamines</Button>\n      <Button>Antacids</Button>\n      <Button>Anti-inflammatory drugs</Button>\n      <Button>Antidepressants</Button>\n      <Button>Antifungal medications</Button>\n      <Button>Blood pressure medications</Button>\n    </SideBar>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  gap: 30px;\n  margin: 25px 0;\n`;\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  width: 100%;\n  height: 470px;\n  padding: 20px;\n  margin-right: 14px;\n  box-shadow: 0px 1px 14px 0px rgba(0, 0, 0, 0.2);\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 7px;\n    height: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #00000090;\n    border-radius: 5px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Drug = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 360px;\n  height: 270px;\n  background-color: #fff;\n  box-shadow: 0px 1px 14px 0px rgba(0, 0, 0, 0.1);\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 170px;\n  background-color: transparent;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 10px;\n  gap: 5px;\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n`;\nexport const IngredientsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: 3px;\n  width: 50%;\n  height: 70px;\n`;\nexport const ActiveIngredient = styled.p`\n  font-weight: 500;\n  overflow-y: auto;\n  &::-webkit-scrollbar {\n    width: 7px;\n    height: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #00000090;\n    border-radius: 5px;\n  }\n`;\n\nexport const Image = styled.img`\n  height: 150px;\n`;\n\nexport const Price = styled.p`\n  font-weight: 500;\n`;\n\nexport const Accent = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n`;\nexport const PriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  gap: 10px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n  cursor: pointer;\n`;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import {\n  Accent,\n  ActiveIngredient,\n  Drug,\n  Image,\n  ImageWrapper,\n  InfoWrapper,\n  IngredientsWrapper,\n  Link,\n  Price,\n  PriceWrapper,\n  Title,\n  Wrapper,\n} from './Item.styled';\nimport { nanoid } from 'nanoid';\nimport stub from './../../images/stub.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { choseDrugsThunk } from '../../redux/operations';\nimport { selectChoseDrugs } from '../../redux/drugsSlice';\nimport { ButtonAdd } from 'components/ButtonAdd/ButtonAdd';\nimport { useContext } from 'react';\nimport { MyContext } from 'components/App';\n\nexport const Item = ({ id, title, price, activeIngredient }) => {\n  const dispatch = useDispatch();\n  const drugsChoseArr = useSelector(selectChoseDrugs);\n  const { isNotifi, setIsNotyfi } = useContext(MyContext);\n  console.log(isNotifi);\n  const handleAddDrugs = async drugId => {\n    if (!drugsChoseArr.includes(drugId)) {\n      dispatch(choseDrugsThunk(drugId));\n      setIsNotyfi(prevState => {\n        if (prevState?.length >= 5) {\n          return prevState;\n        }\n        return [\n          ...prevState,\n          {\n            message: 'Product added to cart.',\n            type: 'success',\n            visible: true,\n            id: nanoid(),\n          },\n        ];\n      });\n    } else {\n      setIsNotyfi(prevState => {\n        if (prevState?.length >= 5) {\n          return prevState;\n        }\n        return [\n          ...prevState,\n          {\n            message: 'The item is already in the cart.',\n            type: 'info',\n            visible: true,\n            id: nanoid(),\n          },\n        ];\n      });\n    }\n  };\n\n  return (\n    <>\n      <Drug>\n        <ImageWrapper>\n          <Image src={stub} />\n        </ImageWrapper>\n\n        <Wrapper>\n          <Link to={`/drugInfo/${id}`}>\n            <Title>{title}</Title>\n          </Link>\n          <InfoWrapper>\n            <IngredientsWrapper>\n              <Accent>Active ingredient:</Accent>\n              <ActiveIngredient>{activeIngredient}</ActiveIngredient>\n            </IngredientsWrapper>\n\n            <PriceWrapper>\n              <Price>Price: {price.toFixed(2)}$</Price>\n              <ButtonAdd onClick={() => handleAddDrugs(id)} />\n            </PriceWrapper>\n          </InfoWrapper>\n        </Wrapper>\n      </Drug>\n    </>\n  );\n};\n","const SchemaDrugsList = arr => {\n  const seller = {\n    '@type': 'Organization',\n    name: 'Drugs 24',\n  };\n\n  const jsonLdData = {\n    '@context': 'https://schema.org',\n    '@type': 'ItemList',\n    name: 'Drugs list',\n    numberOfItems: arr.length,\n    itemListElement: arr.map(({ name, activeIngredient, price }, index) => ({\n      '@type': 'ListItem',\n      position: index + 1,\n      item: {\n        '@type': 'Drug',\n        name: name ? name : null,\n        activeIngredient: activeIngredient ? activeIngredient : null,\n        offers: {\n          '@type': 'Offer',\n          price: price ? price.toFixed(2) : null,\n          priceCurrency: 'USD',\n          availability:\n            arr.length > 0\n              ? 'https://schema.org/InStock'\n              : 'https://schema.org/OutOfStock',\n        },\n      },\n    })),\n    seller,\n  };\n\n  return JSON.stringify(jsonLdData);\n};\n\nexport default SchemaDrugsList;\n","import React from 'react';\nimport { ListStyled } from './List.styled';\nimport { Item } from 'components/Item/Item';\nimport SchemaDrugsList from 'shema.org/SchemaDrugsList';\n\nexport const List = ({ data }) => {\n  const JSON_LD = SchemaDrugsList(data);\n\n  return (\n    <>\n      <script type=\"application/ld+json\">{JSON_LD}</script>\n      <ListStyled>\n        {data?.map(({ id, name, activeIngredient, price }) => {\n          return (\n            <Item\n              key={id}\n              id={id}\n              title={name}\n              price={price}\n              activeIngredient={activeIngredient}\n            />\n          );\n        })}\n      </ListStyled>\n    </>\n  );\n};\n","import { Main } from './Home.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { List } from 'components/List/List';\nimport { useEffect } from 'react';\nimport { fetchDrugsThunk } from '../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDrugs } from '../../redux/drugsSlice';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(selectDrugs);\n\n  useEffect(() => {\n    dispatch(fetchDrugsThunk());\n  }, [dispatch]);\n  return (\n    <>\n      <Main>\n        <Sidebar />\n        <List data={data} />\n      </Main>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["StyledButtonAdd","styled","_templateObject","_taggedTemplateLiteral","ButtonAdd","_ref","onClick","_jsxs","children","_jsx","FaCartPlus","size","SideBar","Title","_templateObject2","Button","_templateObject3","Sidebar","Main","ListStyled","Drug","ImageWrapper","Wrapper","_templateObject4","InfoWrapper","_templateObject5","IngredientsWrapper","_templateObject6","ActiveIngredient","_templateObject7","Image","_templateObject8","Price","_templateObject9","Accent","_templateObject10","PriceWrapper","_templateObject11","Link","NavLink","_templateObject12","urlAlphabet","nanoid","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","Item","title","price","activeIngredient","dispatch","useDispatch","drugsChoseArr","useSelector","selectChoseDrugs","_useContext","useContext","MyContext","isNotifi","setIsNotyfi","console","log","handleAddDrugs","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","drugId","_context","prev","next","includes","prevState","concat","_toConsumableArray","message","type","visible","choseDrugsThunk","stop","_x","apply","_Fragment","src","stub","to","toFixed","arr","jsonLdData","name","numberOfItems","itemListElement","map","index","position","item","offers","priceCurrency","availability","seller","JSON","stringify","List","data","JSON_LD","SchemaDrugsList","selectDrugs","useEffect","fetchDrugsThunk"],"sourceRoot":""}